# This workflow will bump the patch version of the package, create a release on GitHub, and publish the package to NPM.

name: Auto Release and Publish

on:
  push:
    branches:
      - master
  workflow_dispatch:

jobs:
  release:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v4
        with:
          token: ${{ secrets.REPO_PUSH_TOKEN }}

      - name: 'Configure git'
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"

      - uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          registry-url: 'https://registry.npmjs.org'

      - name: Bump patch version
        run: npm version patch --no-git-tag-version

      - name: Get version
        id: project-version
        uses: 'euberdeveloper/ga-project-version@main'
        with:
          package-manager: 'npm'

      - run: |
          git commit -am "Bump version to v${{ steps.project-version.outputs.version }} [skip ci]"
          git push

      - uses: "marvinpinto/action-automatic-releases@latest"
        with:
          repo_token: "${{ secrets.REPO_PUSH_TOKEN }}"
          automatic_release_tag: "v${{ steps.project-version.outputs.version }}"
          prerelease: false
          title: "v${{ steps.project-version.outputs.version }}"

  publish:
    runs-on: ubuntu-latest
    needs: release  # Ensures this job runs after the release job

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.REPO_PUSH_TOKEN }}

      - name: Pull latest changes
        run: git pull origin master

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          registry-url: 'https://registry.npmjs.org'

      - name: Install Dependencies
        run: npm install

      - name: Build Package
        run: npm run build

      - name: Publish to NPM
        run: npm publish --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
